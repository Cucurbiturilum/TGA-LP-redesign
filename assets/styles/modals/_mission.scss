@use '../abstracts/colours' as *;
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

.mission {
  display: flex;
  flex-direction: column;
  row-gap: toRem(48);


  &-quote {
    display: flex;
    flex-direction: column;
    border-radius: 10px;
    border-top: 4px solid $green-primary;
    row-gap: toRem(20);
    padding-top: toRem(20);


    &__text {
      font-size: clamp(1.125rem, 1.0114rem + 0.5682vw, 1.375rem);
      font-weight: 400;
      line-height: 1.6;
    }

    &__author {
      display: flex;
      flex-direction: row;
      align-self: center;
      justify-self: center;
      column-gap: toRem(20);

      &-img {
        max-width: 33%;
        object-fit: cover;
      }

      &-name {
        font-size: clamp(1.125rem, 0.9464rem + 0.8929vw, 1.375rem);
      }

      &-role {
        font-weight: 300;
      }
    }
  }

  &-goals{
    $colors: (
            $green-primary-10,
            $orange-10,
            $blue-10,
            $pink-primary-10,
            $green-secondary-10,
            $violet-10
    );

    display: grid;
    gap: 10px;

    $i: 0;
    @each $color in $colors {
      $i: $i + 1;
      &__item:nth-child(#{$i}) {
        background: $color;
        padding: toRem(20);
        border-radius: toRem(10);
        display: flex;
        align-items: center;
      }
    }

  }

  @include breakpoint(md) {
    &-quote {
      flex-direction: row;
      padding-top: 0;
      padding-left: toRem(20);
      border-left: 4px solid $green-primary;
      border-top: none;
      column-gap: toRem(24);
      align-items: center;

      &__text{
        line-height: 1.8;
      }

      &__author {
        display: flex;
        flex-direction: column;
        row-gap: toRem(24);
        flex: 1 0 45%;

        &-img {
          max-width: 100%;
        }
      }
    }

    &-goals{
      gap: toRem(24);
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);

      &__item{
        padding: toRem(30)!important;

        &:nth-of-type(2) {
          grid-column: span 2 / span 2;
        }

        &:nth-of-type(3) {
          grid-column: span 2 / span 2;
          grid-row-start: 2;
        }

        &:nth-of-type(4) {
          grid-column-start: 3;
          grid-row-start: 2;
        }

        &:nth-of-type(5) {
          grid-row-start: 3;
        }

        &:nth-of-type(6) {
          grid-column: span 2 / span 2;
          grid-row-start: 3;
        }
      }
    }
  }
}